#include <DS1307.h>

byte lookup[672] = {
  //32 Space
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  //33 Exclamation !
  0b01000000,
  0b01000000,
  0b01000000,
  0b01000000,
  0b01000000,
  0b00000000,
  0b01000000,
  //34 Quotes "
  0b01010000,
  0b01010000,
  0b01010000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  //35 Number #
  0b00000000,
  0b00000000,
  0b01010000,
  0b11111000,
  0b01010000,
  0b11111000,
  0b01010000,
  //36 Dollars $
  0b00100000,
  0b01110000,
  0b10100000,
  0b01110000,
  0b00101000,
  0b01110000,
  0b00100000,
  //37 Percent %
  0b01000000,
  0b10101000,
  0b01010000,
  0b00100000,
  0b01010000,
  0b10101000,
  0b00010000,
  //38 Ampersand &
  0b00100000,
  0b01010000,
  0b10100000,
  0b01000000,
  0b10101000,
  0b10010000,
  0b01101000,
  //39 Single Quote '
  0b01000000,
  0b01000000,
  0b01000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  //40 Left Parenthesis (
  0b00010000,
  0b00100000,
  0b01000000,	
  0b01000000,
  0b01000000,
  0b00100000,
  0b00010000,
  //41 Right Parenthesis )
  0b01000000,
  0b00100000,
  0b00010000,
  0b00010000,
  0b00010000,
  0b00100000,
  0b01000000,
  //42 Star *
  0b00010000,
  0b00111000,
  0b00010000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  //43 Plus +
  0b00000000,
  0b00100000,
  0b00100000,
  0b11111000,
  0b00100000,
  0b00100000,
  0b00000000,
  //44 Comma ,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00010000,
  0b00010000,
  //45 Minus -
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b11111000,
  0b00000000,
  0b00000000,
  //46 Period .
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00010000,
  // 47 Backslash /
  0b00000000,
  0b00001000,
  0b00010000,
  0b00100000,
  0b01000000,
  0b10000000,
  0b00000000,
  // 48 Zero
  0b01110000,
  0b10001000,
  0b10101000,
  0b10101000,
  0b10001000,
  0b01110000,
  0b00000000,
  //49 One
  0b00100000,
  0b01100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b01110000,
  0b00000000,  
  //50 two
  0b01110000,
  0b10001000,
  0b00010000,
  0b00100000,
  0b01000000,
  0b11111000,
  0b00000000,
  //51 Three
  0b11111000,
  0b00010000,
  0b00100000,
  0b00010000,
  0b10001000,
  0b01110000,
  0b00000000,
  //52 Four
  0b10010000,
  0b10010000,
  0b10010000,
  0b11111000,
  0b00010000,
  0b00010000,
  0b00000000,
  //53 Five
  0b11111000,
  0b10000000,
  0b11110000,
  0b00001000,
  0b10001000,
  0b01110000,
  0b00000000,
  //54 Six
  0b01110000,
  0b10000000,
  0b11110000,
  0b10001000,
  0b10001000,
  0b01110000,
  0b00000000,
  //55 Seven
  0b11111000,
  0b00001000,
  0b00010000,
  0b00100000,
  0b01000000,
  0b10000000,
  0b00000000,
  //56 Eight
  0b01110000,
  0b10001000,
  0b01110000,
  0b10001000,
  0b10001000,
  0b01110000,
  0b00000000,
  //57 Nine
  0b01110000,
  0b10001000,
  0b10001000,
  0b01111000,
  0b00001000,
  0b01110000,
  0b00000000,
  //58 :
  0b00000000,
  0b00000000,
  0b00100000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00100000,
  //59 ;
  0b00000000,
  0b00000000,
  0b00100000,
  0b00000000,
  0b00100000,
  0b00100000,
  0b01000000,
  //60 <
  0b00000000,
  0b00011000,
  0b01100000,
  0b10000000,
  0b01100000,
  0b00011000,
  0b00000000,
  //61 =
  0b00000000,
  0b00000000,
  0b01111000,
  0b00000000,
  0b01111000,
  0b00000000,
  0b00000000,
  //62 >
  0b00000000,
  0b11000000,
  0b00110000,
  0b00001000,
  0b00110000,
  0b11000000,
  0b00000000,
  //63 ?
  0b01100000,
  0b10010000,
  0b00100000,
  0b00100000,
  0b00000000,
  0b00100000,
  0b00000000,
  //64 @
  0b01110000,
  0b10001000,
  0b10011000,
  0b10101000,
  0b10010000,
  0b10001000,
  0b01110000,
  //65 A
  0b00100000,
  0b01010000,
  0b10001000,
  0b11111000,
  0b10001000,
  0b10001000,
  0b00000000,
  //B
  0b11110000,
  0b10001000,
  0b1111000,
  0b10001000,
  0b10001000,
  0b11110000,
  0b00000000,
  //C
  0b01110000,
  0b10001000,
  0b10000000,
  0b10000000,
  0b10001000,
  0b01110000,
  0b00000000,
  //D
  0b11110000,
  0b10001000,
  0b10001000,
  0b10001000,
  0b10001000,
  0b11110000,
  0b00000000,
  //E
  0b11111000,
  0b10000000,
  0b11111000,
  0b10000000,
  0b10000000,
  0b11111000,
  0b00000000,
  //F
  0b11111000,
  0b10000000,
  0b11110000,
  0b10000000,
  0b10000000,
  0b10000000,
  0b00000000,
  //G
  0b01110000,
  0b10001000,
  0b10000000,
  0b10011000,
  0b10001000,
  0b01110000,
  0b00000000,
  //H
  0b10001000,
  0b10001000,
  0b11111000,
  0b10001000,
  0b10001000,
  0b10001000,
  0b00000000,
  //I
  0b01110000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b01110000,
  0b00000000,
  //J
  0b00111000,
  0b00010000,
  0b00010000,
  0b00010000,
  0b10010000,
  0b01100000,
  0b00000000,
  //K
  0b10001000,
  0b10010000,
  0b11100000,
  0b10100000,
  0b10010000,
  0b10001000,
  0b00000000,
  //L
  0b10000000,
  0b10000000,
  0b10000000,
  0b10000000,
  0b10000000,
  0b11111000,
  0b00000000,
  //M
  0b10001000,
  0b11011000,
  0b10101000,
  0b10101000,
  0b10001000,
  0b10001000,
  0b00000000,
  //N
  0b10001000,
  0b10001000,
  0b11001000,
  0b10101000,
  0b10011000,
  0b10001000,
  0b00000000,
  //O
  0b01110000,
  0b10001000,
  0b10001000,
  0b10001000,
  0b10001000,
  0b01110000,
  0b00000000,
  //P
  0b11110000,
  0b10001000,
  0b11110000,
  0b10000000,
  0b10000000,
  0b10000000,
  0b00000000,
  //Q
  0b01110000,
  0b10001000,
  0b10001000,
  0b10101000,
  0b10010000,
  0b01101000,
  0b00000000,
  //R
  0b11110000,
  0b10001000,
  0b11110000,
  0b10100000,
  0b10010000,
  0b10001000,
  0b00000000,
  //S
  0b01111000,
  0b10000000,
  0b01110000,
  0b00001000,
  0b00001000,
  0b11110000,
  0b00000000,
  //T
  0b11111000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00000000,
  //U
  0b10001000,
  0b10001000,
  0b10001000,
  0b10001000,
  0b10001000,
  0b01110000,
  0b00000000,
  //V
  0b10001000,
  0b10001000,
  0b10001000,
  0b10001000,
  0b01010000,
  0b00100000,
  0b00000000,
  //W
  0b10001000,
  0b10001000,
  0b10101000,
  0b10101000,
  0b10101000,
  0b01010000,
  0b00000000,
  //X
  0b10001000,
  0b01010000,
  0b00100000,
  0b01010000,
  0b10001000,
  0b10001000,
  0b00000000,
  //Y
  0b10001000,
  0b10001000,
  0b01010000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00000000,
  //Z
  0b11111000,
  0b00001000,
  0b00010000,
  0b00100000,
  0b01000000,
  0b11111000,
  0b00000000,
  //91 [
  0b11100000,
  0b10000000,
  0b10000000,
  0b10000000,
  0b10000000,
  0b11100000,
  0b00000000,
  //92 (backslash)
  0b00000000,
  0b10000000,
  0b01000000,
  0b00100000,
  0b00010000,
  0b00001000,
  0b00000000,
  //93 ]
  0b00111000,
  0b00001000,
  0b00001000,
  0b00001000,
  0b00001000,
  0b00111000,
  0b00000000,
  //94 ^
  0b00100000,
  0b01010000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  //95 _
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b11111000,
  //96 `
  0b10000000,
  0b01000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  //97 a
  0b00000000,
  0b01100000,
  0b00010000,
  0b01110000,
  0b10010000,
  0b01100000,
  0b00000000,
  //98 b
  0b10000000,
  0b10000000,
  0b11100000,
  0b10010000,
  0b10010000,
  0b11100000,
  0b00000000,
  //99 c
  0b00000000,
  0b00000000,
  0b01110000,
  0b10000000,
  0b10000000,
  0b01110000,
  0b00000000,
  // 100 d
  0b00010000,
  0b00010000,
  0b01110000,
  0b10010000,
  0b10010000,
  0b01110000,
  0b00000000,
  //101 e
  0b00000000,
  0b01100000,
  0b10010000,
  0b11110000,
  0b10000000,
  0b01110000,
  0b00000000,
  //102 f
  0b00110000,
  0b01000000,
  0b11100000,
  0b01000000,
  0b01000000,
  0b01000000,
  0b00000000,
  //103 g
  0b00000000,
  0b01100000,
  0b10010000,
  0b01110000,
  0b00010000,
  0b00010000,
  0b01100000,
  //104 h
  0b10000000,
  0b10000000,
  0b11100000,
  0b10010000,
  0b10010000,
  0b10010000,
  0b00000000,
  //105 i
  0b00100000,
  0b00000000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b01110000,
  0b00000000,
  //106 j
  0b00010000,
  0b00000000,
  0b00110000,
  0b00010000,
  0b00010000,
  0b00010000,
  0b01100000,
  //107 k
  0b10000000,
  0b10010000,
  0b10100000,
  0b11000000,
  0b10100000,
  0b10010000,
  0b00000000,
  //108 l
  0b01100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b01110000,
  0b00000000,
  //109 m
  0b00000000,
  0b00000000,
  0b01010000,
  0b10101000,
  0b10101000,
  0b10101000,
  0b00000000,
  //110 n
  0b00000000,
  0b00000000,
  0b11110000,
  0b10001000,
  0b10001000,
  0b10001000,
  0b00000000,
  //111 o
  0b00000000,
  0b00000000,
  0b01100000,
  0b10010000,
  0b10010000,
  0b01100000,
  0b00000000,
  //112 p
  0b00000000,
  0b00000000,
  0b01100000,
  0b10010000,
  0b11110000,
  0b10000000,
  0b10000000,
  //113 q
  0b00000000,
  0b00000000,
  0b01100000,
  0b10010000,
  0b11110000,
  0b00010000,
  0b00010000,
  //114 r
  0b00000000,
  0b00000000,
  0b10110000,
  0b01001000,
  0b01000000,
  0b01000000,
  0b00000000,
  //115 s
  0b00000000,
  0b00110000,
  0b01000000,
  0b00100000,
  0b00010000,
  0b01100000,
  0b00000000,
  //116 t
  0b01000000,
  0b01000000,
  0b11100000,
  0b01000000,
  0b01000000,
  0b01000000,
  0b00000000,
  // 117u
  0b00000000,
  0b00000000,
  0b10010000,
  0b10010000,
  0b10010000,
  0b01100000,
  0b00000000,
  //118 v
  0b00000000,
  0b00000000,
  0b10001000,
  0b10001000,
  0b01010000,
  0b00100000,
  0b00000000,
  //119 w
  0b00000000,
  0b00000000,
  0b00000000,
  0b10101000,
  0b10101000,
  0b01010000,
  0b00000000,
  //120 x
  0b00000000,
  0b10001000,
  0b01010000,
  0b00100000,
  0b01010000,
  0b10001000,
  0b00000000,
  //121 y
  0b00000000,
  0b00000000,
  0b10010000,
  0b10010000,
  0b01100000,
  0b01000000,
  0b10000000,
  //122 z
  0b00000000,
  0b00000000,
  0b11110000,
  0b00100000,
  0b01000000,
  0b11110000,
  0b00000000,
  //123 {
  0b00100000,
  0b01000000,
  0b01000000,
  0b10000000,
  0b01000000,
  0b01000000,
  0b00100000,
  //124 |
  0b00100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00100000,
  //125 }
  0b00100000,
  0b00010000,
  0b00010000,
  0b00001000,
  0b00010000,	
  0b00010000,
  0b00100000,
  //126 ~
  0b00000000,
  0b00000000,
  0b01000000,
  0b10101000,
  0b00010000,
  0b00000000,
  0b00000000,
  //127 DEL
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000,
  0b00000000

};
String text;
DS1307 rtc(18, 19);// DS1307 is connected to  pin18(SDA) and pin19(SCL)
void init_rtc()
{
  rtc.halt(false);// Set the clock to run-mode
  // The following lines can be commented out to use the values already stored in the DS1307
  rtc.setDOW(WEDNESDAY);        // Set Day-of-Week to SUNDAY
  rtc.setTime(11, 33, 0);     // Set the time to 12:00:00 (24hr format)
  rtc.setDate(1, 8, 2012);   // Set the date to March 7th, 2011
  
  rtc.setSQWRate(0);   // enable sqware wave at 1 hz 
  rtc.enableSQW(1);
} 

void print_time()
{
 // Serial.print(rtc.getDOWStr());
 // Serial.print(" ");// Send Day-of-Week

 // Serial.print(rtc.getDateStr());
 // Serial.print(" -- ");// Send date

  text=rtc.getTimeStr(1); // Send time
}
void setup()
{  
   //init_rtc();// run only once for all chips
   for(int i=6;i<=13;i++)
   pinMode(i,OUTPUT);
   attachInterrupt(0, disp_text, RISING);
   attachInterrupt(1, print_time, RISING);
   alloff();
   
   
}

void alloff()
{
  for(int i=6;i<=13;i++)
  digitalWrite(i,HIGH);
}

void allon()
{
  for(int i=6;i<=13;i++)
  digitalWrite(i,LOW);
}

void disp_text()
{
 
   for (int a=sizeof(text)+1;a>=0;a--)
      {
        if (text[a]!='\0')
         disp(text[a]);
         
        else
         disp(' ');         
      }
      //alloff();
}
void disp(char c)
{
  
 c = c -32;
 for(int i=1;i<8;i++)
   {
     for(int j=0;j<7;j++)
     {
       digitalWrite(13-j,!bitRead(lookup[(7*c+j)],i));
       delayMicroseconds(50);
       alloff();
       delayMicroseconds(1);
     }
   }
}

void loop()
{
  
 
 
  
}
